{
  "name": "role-updated",
  "temp": "rolebefore",
  "event-type": "25",
  "_id": "BDQWN",
  "actions": [
    {
      "behavior": "1",
      "interpretation": "1",
      "code": "const wm = this.getWrexMods();\nconst fs = require(\"fs\");\nconst nodegyp = require('node-gyp');\nconst db = wm.require('quick.db');\nconst path = `./resources/database/${server.id}/log_chan.txt`;\nconst rolebefore = tempVars('rolebefore');\nconst roleafter = tempVars(\"roleafter\");\nlet embed = new DiscordJS.RichEmbed();\n\nif (fs.existsSync(path)) {\n    const log_chan = fs.readFileSync(path, 'utf8');\n    const log_system = db.get(`${server.id}log_system.role-updated`);\n    if (log_system === \"enabled\") {\n        if (roleafter.id != server.id) {\n            if (rolebefore.name != roleafter.name || rolebefore.hexColor != roleafter.hexColor) {\n                embed.setTitle(`Role \"${rolebefore.name}\" Updated`);\n                embed.setColor(roleafter.hexColor);\n                embed.addField('Name', (rolebefore.name == roleafter.name) ? `Updated: :x:` : `Updated: ✅ \\n New Name: ${roleafter.name}`, true);\n                embed.addField('Color', (rolebefore.hexColor == roleafter.hexColor) ? 'Updated: :x:' : `Updated: ✅ \\n New Color: ${roleafter.hexColor}`, true);\n                embed.setFooter(`ID: ${roleafter.id}`);\n                embed.setTimestamp();\n                server.channels.get(log_chan).send(embed);\n                db.add(`${server.id}logs.role_updated`, 1);\n                db.add(`${server.id}logs.all`, 1);\n            }\n        }\n    }\n}",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    }
  ],
  "temp2": "roleafter",
  "restriction": "0"
}