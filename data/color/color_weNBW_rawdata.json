{
  "name": "color",
  "permissions": "NONE",
  "restriction": "1",
  "_id": "weNBW",
  "actions": [
    {
      "behavior": "1",
      "interpretation": "1",
      "code": "const {\n    RichEmbed\n} = require('discord.js');\nconst isImageURL = require('is-image-url');\nconst isURL = require('is-url');\nconst rgbHex = require('rgb-hex');\nconst convert = require('color-convert');\nconst {\n    getColorFromURL\n} = require('color-thief-node');\nconst stripIndent = require('strip-indent');\n\n(async () => {\n    const prefix = (server && server.tag) || this.getDBM()\n        .Files.data.settings.tag;\n    let input = msg.content.slice(prefix.length)\n        .trim()\n        .split(/ +/g);\n    input.shift();\n    input = input.join(' ');\n    let color;\n    let embed = new RichEmbed();\n    embed.setAuthor(msg.member.displayName, msg.author.displayAvatarURL);\n\n    const rgbRegex = new RegExp(/^rgb[\\s+]?\\((:?\\d+\\.?\\d?%?)(,|-|\\/\\|)\\s?(:?\\d+\\.?\\d?%?)(,|-|\\/\\|)\\s?(:?\\d+\\.?\\d?%?)\\)/i);\n    const hexRegex = new RegExp(\"(^(#|0x)?([a-fA-F0-9]){6}$)|(^(#|0x)?([a-fA-F0-9]){3}$)\");\n    const cssRegex = new RegExp(\"^[a-zA-Z]+$\");\n\n    if (isURL(input)) {\n        if (isImageURL(input)) {\n            const rgb = await getColorFromURL(input);\n            input = rgbHex(rgb.join(\",\"));\n            embed.setTitle('Dominant Color From Image');\n        }\n    }\n\n    if (rgbRegex.test(input)) {\n        input = input.trim()\n            .replace('rgb(', '')\n            .replace(')', '');\n        input = input.replace('/\\s/g', '');\n        input = input.split(',');\n\n        try {\n            color = {\n                \"css\": convert.rgb.keyword(input),\n                \"hex\": convert.rgb.hex(input),\n                \"hsl\": convert.rgb.hsl(input),\n                \"cmyk\": convert.rgb.cmyk(input),\n                \"rgb\": input\n            };\n        } catch (err) {\n            const rand = \"000000\".replace(/0/g, function () {\n                return (~~(Math.random() * 16))\n                    .toString(16);\n            });\n            embed.setTitle('Invalid color, random one assigned:');\n\n            color = {\n                \"css\": convert.hex.keyword(rand),\n                \"rgb\": convert.hex.rgb(rand),\n                \"hsl\": convert.hex.hsl(rand),\n                \"cmyk\": convert.hex.cmyk(rand),\n                \"hex\": rand\n            };\n        }\n    } else if (hexRegex.test(input)) {\n        input = input.toUpperCase();\n        if (input.charAt() == \"#\") {\n            input = input.substr(1);\n        } else if (input.charAt() == \"0\" && input.charAt(1) == \"X\") {\n            input = input.substr(2);\n        }\n\n        if (input.length == \"3\") {\n            input = input.slice();\n            const pos1 = input[0];\n            const pos2 = input[1];\n            const pos3 = input[2];\n            input = pos1 + pos1 + pos2 + pos2 + pos3 + pos3;\n        }\n\n        try {\n            color = {\n                \"css\": convert.hex.keyword(input),\n                \"rgb\": convert.hex.rgb(input),\n                \"hsl\": convert.hex.hsl(input),\n                \"cmyk\": convert.hex.cmyk(input),\n                \"hex\": input\n            };\n        } catch (err) {\n            const rand = \"000000\".replace(/0/g, function () {\n                return (~~(Math.random() * 16))\n                    .toString(16);\n            });\n            embed.setTitle('Invalid color, random one assigned:');\n\n            color = {\n                \"css\": convert.hex.keyword(rand),\n                \"rgb\": convert.hex.rgb(rand),\n                \"hsl\": convert.hex.hsl(rand),\n                \"cmyk\": convert.hex.cmyk(rand),\n                \"hex\": rand\n            };\n        }\n    } else if (cssRegex.test(input)) {\n        if (input == 'random') {\n            const rand = \"000000\".replace(/0/g, function () {\n                return (~~(Math.random() * 16))\n                    .toString(16);\n            });\n            embed.setTitle('Random Color');\n\n            color = {\n                \"css\": convert.hex.keyword(rand),\n                \"rgb\": convert.hex.rgb(rand),\n                \"hsl\": convert.hex.hsl(rand),\n                \"cmyk\": convert.hex.cmyk(rand),\n                \"hex\": rand\n            };\n        } else {\n            try {\n                while (input.length < 2) {\n                    if (input === \"r\") {\n                        input = \"red\";\n                        break;\n                    } else if (input === \"g\") {\n                        input = \"green\";\n                        break;\n                    } else if (input === \"b\") {\n                        input = \"blue\";\n                        break;\n                    } else {\n                        break;\n                    }\n                }\n                color = {\n                    \"hex\": convert.keyword.hex(input),\n                    \"rgb\": convert.keyword.rgb(input),\n                    \"hsl\": convert.keyword.hsl(input),\n                    \"cmyk\": convert.keyword.cmyk(input),\n                    \"css\": input\n                };\n            } catch (err) {\n                const rand = \"000000\".replace(/0/g, function () {\n                    return (~~(Math.random() * 16))\n                        .toString(16);\n                });\n                embed.setTitle('Invalid color, random one assigned:');\n\n                color = {\n                    \"css\": convert.hex.keyword(rand),\n                    \"rgb\": convert.hex.rgb(rand),\n                    \"hsl\": convert.hex.hsl(rand),\n                    \"cmyk\": convert.hex.cmyk(rand),\n                    \"hex\": rand\n                };\n            }\n        }\n    } else {\n        const rand = \"000000\".replace(/0/g, function () {\n            return (~~(Math.random() * 16))\n                .toString(16);\n        });\n        embed.setTitle('Invalid color, random one assigned:');\n\n        color = {\n            \"css\": convert.hex.keyword(rand),\n            \"rgb\": convert.hex.rgb(rand),\n            \"hsl\": convert.hex.hsl(rand),\n            \"cmyk\": convert.hex.cmyk(rand),\n            \"hex\": rand\n        };\n    }\n    //Formatting RGB\n    let rgb = JSON.stringify(color.rgb)\n        .slice(1, -1);\n    rgb = rgb.replace(/['\"]+/g, '')\n        .split(',')\n        .join(', ');\n\n    //Formatting cmyk\n    let cmyk = JSON.stringify(color.cmyk)\n        .slice(1, -1);\n    cmyk = cmyk.split(',')\n        .join('%, ') + \"%\";\n\n    //Formatting hsl\n    const str = JSON.stringify(color.hsl)\n        .slice(1, -1);\n    const h = str.split(',')[0];\n    const s = str.split(',')[1];\n    const l = str.split(',')[2];\n    const hsl = h + \", \" + s + \"%, \" + l + \"%\";\n\n    //Getting originals back\n    const css = JSON.stringify(color.css)\n        .slice(1, -1);\n    const hex = JSON.stringify(color.hex)\n        .slice(1, -1)\n        .toUpperCase();\n\n    //Saving color again\n    color = {\n        \"css\": css,\n        \"hex\": hex,\n        \"rgb\": rgb,\n        \"cmyk\": cmyk,\n        \"hsl\": hsl\n    };\n\n    if (!embed.title) embed.setTitle('Color Information');\n    embed.setThumbnail(`https://dummyimage.com/100x100/${color.hex}.png&text=+`);\n    embed.setColor(color.hex);\n    embed.setDescription(stripIndent(`\n        **Name:** ${color.css}\n        **Hex:** #${color.hex}\n        **Rgb:** rgb(${color.rgb})\n        **Hsl:** hsl(${color.hsl})\n        **Cmyk:** cmyk(${color.cmyk})\n        `));\n    msg.channel.send(embed);\n})();",
      "storage": "0",
      "varName": "",
      "name": "Run Script"
    }
  ]
}